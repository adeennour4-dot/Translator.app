name: Build Android APK

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # Primary pnpm installer (preferred)
      - name: Setup pnpm (action)
        uses: pnpm/action-setup@v3
        with:
          version: 9

      # Verify pnpm and fallbacks (corepack / npm -g) — prints debug info
      - name: Ensure pnpm is available (verify + fallbacks)
        shell: bash
        run: |
          set -euxo pipefail

          echo "PATH: $PATH"
          echo "Which node:"
          which node || true
          node -v || true

          if command -v pnpm >/dev/null 2>&1; then
            echo "pnpm already installed: $(pnpm -v)"
            which pnpm || true
            exit 0
          fi

          echo "pnpm not found after pnpm/action-setup — trying corepack..."
          # corepack is bundled with modern Node; enable and prepare pnpm
          corepack enable || echo "corepack enable failed (non-fatal)"
          corepack prepare pnpm@9 --activate || echo "corepack prepare failed (non-fatal)"

          if command -v pnpm >/dev/null 2>&1; then
            echo "pnpm available via corepack: $(pnpm -v)"
            which pnpm || true
            exit 0
          fi

          echo "corepack didn't provide pnpm — installing globally with npm"
          npm install -g pnpm@9

          if command -v pnpm >/dev/null 2>&1; then
            echo "pnpm available after npm -g: $(pnpm -v)"
            which pnpm || true
            exit 0
          fi

          echo "ERROR: pnpm still not found. Dump PATH:"
          echo "::debug::PATH=$PATH"
          ls -la $(npm bin -g) || true
          exit 1

      # Install JS dependencies with pnpm
      - name: Install dependencies
        run: pnpm install

      # Build web app
      - name: Build web app
        run: pnpm run build

      # Setup Java 17 (required by Android)
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # Add Android platform (Capacitor)
      - name: Add Android Platform
        run: npx cap add android

      - name: Sync Capacitor project
        run: npx cap sync android

      # Decode keystore from GitHub secrets
      - name: Decode Keystore
        working-directory: android
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/release.keystore

      # Build and sign APK
      - name: Build and Sign Release APK
        working-directory: android
        run: |
          ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=app/release.keystore \
          -Pandroid.injected.signing.key.alias=${{ secrets.KEYSTORE_ALIAS }} \
          -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_STORE_PASSWORD }} \
          -Pandroid.injected.signing.key.password=${{ secrets.KEYSTORE_PASSWORD }}

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/app-release.apk
